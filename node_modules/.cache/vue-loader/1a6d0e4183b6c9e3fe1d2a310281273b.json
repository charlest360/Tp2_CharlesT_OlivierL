{"remainingRequest":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\carlo\\Documents\\TP2\\src\\components\\CreateAccount.vue?vue&type=style&index=0&id=01098111&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\carlo\\Documents\\TP2\\src\\components\\CreateAccount.vue","mtime":1589925758884},{"path":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\carlo\\Documents\\TP2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm1fX2xhYmVsIHsKICAgIGZsb2F0OiBsZWZ0OwogICAgd2lkdGg6IDI1JTsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4OwogICAgZm9udC1zaXplOiAyMHB4OwogICAgY29sb3I6IGJsYWNrOwp9CmxpIHsKICAgIG1hcmdpbi10b3A6IDIwcHg7CgogICAgCgp9Ci5mb3JtX19jb250cm9sewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgd2lkdGg6IDcwJTsKICAgIHBhZGRpbmctYm90dG9tOiA1cHg7CiAgICBwYWRkaW5nLXRvcDogNXB4Owp9CnVsIHsKICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKfQouY3JlYXRlQWNjb3VudEZvcm17CiAgICB3aWR0aDogNTAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZGM2ZDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG1hcmdpbjogYXV0bzsKfQojc3VibWl0QnV0dG9uIHsKICAgIHdpZHRoOiA1MCU7CiAgICBmb250LXNpemU6IDIwcHg7CiAgICBwYWRkaW5nLXRvcDogMTBweDsKICAgIHBhZGRpbmctYm90dG9tOiAxMHB4OwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBjb2xvcjogI0U2QjkxRTsKICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwp9Ci5hY2NvdW50Q29udGVudHsKICAgIGNvbG9yOiBibGFjazsKfQouaGlkZGVuIHsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KLmVycm9yIHsKICAgIGZsb2F0OiBsZWZ0Owp9Cgo="},{"version":3,"sources":["CreateAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateAccount.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"createAccountForm\">\r\n        <div v-if=\"response != null\">\r\n            <span> Account created!</span>\r\n        </div>\r\n        <form @submit.prevent=\"validateAndSend\" v-else>\r\n            <ul>\r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_Login\">Login :</label>\r\n                    <input v-model=\"login\"  type=\"text\" class=\"form__control \" id=\"registrationForm_Login\" name=\"Login\" >\r\n                </li>\r\n                 <div v-if=\"userExists==true\"> \r\n                    <span style=\"color:red;\">This login is already used.</span>\r\n                </div>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'login' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n\r\n                \r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_Password\">Password :</label>\r\n                    <input v-model=\"password\" type=\"text\" class=\"form__control \" id=\"registrationForm_Password\" name=\"Password\" autocomplete=\"off\">\r\n                </li>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'password' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n\r\n\r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_ConfirmPassword\">Confirm Password :</label>\r\n                    <input v-model=\"confirmPassword\" type=\"text\" class=\"form__control \" id=\"registrationForm_ConfirmPassword\" name=\"Password\" autocomplete=\"off\">\r\n                </li>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'confirmPassword' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n                \r\n                \r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_Email\">Email :</label>\r\n                    <input v-model=\"email\" type=\"text\" class=\"form__control \" id=\"registrationForm_Email\" name=\"Email\">\r\n                </li>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'email' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n                \r\n\r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_Last_Name\">Last name :</label>\r\n                    <input v-model=\"lastName\" type=\"text\" class=\"form__control \" id=\"registrationForm_Last_Name\" name=\"lastName\" >\r\n                </li>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'lastName' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n                \r\n                <li>\r\n                    <label class=\" form__label\" for=\"registrationForm_First_Name\">First name :</label>\r\n                    <input v-model=\"firstName\" type=\"text\" class=\"form__control \" id=\"registrationForm_First_Name\" name=\"firstName\" >\r\n                </li>\r\n                <div v-if=\"validationErrors.length >= 1 && validationErrors[0].type == 'firstName' \"> \r\n                    <span style=\"color:red;\">{{validationErrors[0].message}} </span>\r\n                </div>\r\n                \r\n                <li>\r\n                    <button @click=\"validateAndSend\" id=\"submitButton\" >\r\n                        Create account\r\n                    </button>\r\n                </li>\r\n\r\n            </ul>\r\n        </form>\r\n        \r\n        \r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport FilmService from '@/services/FilmService.js';\r\n    export default {\r\n     \r\n        data() {\r\n            return {\r\n                login: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n                email: '',\r\n                lastName: '',\r\n                firstName: '',\r\n                response: null,\r\n                error: null,\r\n                validationErrors: [],\r\n                userExists: false,\r\n                success: null,\r\n            }\r\n        },\r\n        watch: {\r\n            login: function() {\r\n                if(this.login.length >=3){\r\n                    this.checkIfUserExists();\r\n                }\r\n            }\r\n        },      \r\n        methods: {\r\n            checkIfUserExists(){\r\n                FilmService.checkUserLoginExists(this.login)\r\n                .then(response => {\r\n                    this.userExists = response.data.isTaken;\r\n                    })\r\n                    .catch(error => {\r\n                    this.error = error;\r\n                    });\r\n\r\n            },\r\n            validateAndSend(){\r\n                this.success = this.validateData();\r\n                if( this.userExists == false && this.success == true){\r\n                    let data = {\r\n                        role_id : 2,\r\n                        login : this.login,\r\n                        password : this.password,\r\n                        email : this.email,\r\n                        last_name: this.lastName,\r\n                        first_name: this.lastName\r\n                    }\r\n                    FilmService.createNewUser(data)\r\n                    .then(response => {\r\n                    this.response = response.data;\r\n                    })\r\n                    .catch(error => {\r\n                    this.error = error;\r\n                    });\r\n                }\r\n            },\r\n            validateData() {\r\n                this.validationErrors = [];\r\n                if (this.validateLogin() ==true &&\r\n                this.validatePassword() ==true &&\r\n                this.validateConfirmPassword() &&\r\n                this.validateEmail() == true && \r\n                this.validateLastName()== true &&\r\n                this.validateFirstName() == true\r\n                ) \r\n                {\r\n                    return true;\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            },\r\n            \r\n            validateLogin(){\r\n                if(this.login == ''){\r\n                    this.validationErrors.push({type:'login',message:'Login field is required'});\r\n                    return false;\r\n                }\r\n                else if(this.login.length < 3 || this.login.length > 50) {\r\n                    this.validationErrors.push({type:'login', message:'Login field must be between 3 and 50 characters long'});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            validatePassword(){\r\n                if(this.password == ''){\r\n                    this.validationErrors.push({type:'password',message:'Password field is required'});\r\n                    return false;\r\n                }\r\n                else if(this.password.length < 5 || this.password.length > 50) {\r\n                    this.validationErrors.push({type:'password',message:'Password field must be between 5 and 50 characters long'});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            validateConfirmPassword(){\r\n                if(this.confirmPassword == ''){\r\n                    this.validationErrors.push({type:'confirmPassword',message:'You must confirm your password'});\r\n                    return false;\r\n                }\r\n                else if(this.confirmPassword != this.password) {\r\n                    this.validationErrors.push({type:'confirmPassword',message:'Passwords are not identical'});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            validateEmail(){\r\n                if(this.email == ''){\r\n                    this.validationErrors.push({type:'email',message:'Email field is required'});\r\n                    return false;\r\n                }\r\n                else if(this.email.length < 8 || this.email.length > 50) {\r\n                    this.validationErrors.push({type:'email',message:'Please enter a valid email address '});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            validateFirstName(){\r\n                if(this.firstName == ''){\r\n                    this.validationErrors.push({type:'firstName',message:'First name field is required'});\r\n                    return false;\r\n                }\r\n                else if(this.firstName.length < 2 || this.firstName.length > 50) {\r\n                    this.validationErrors.push({type:'firstName',message:'First name field must be between 2 and 50 characters '});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            validateLastName(){\r\n                if(this.lastName == ''){\r\n                    this.validationErrors.push({type:'lastName',message:'Last name field is required'});\r\n                    return false;\r\n                }\r\n                else if(this.lastName.length < 2 || this.lastName.length > 50) {\r\n                    this.validationErrors.push({type:'LastName',message:'Last name field must be between 2 and 50 characters '});\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n        } \r\n    }\r\n    \r\n</script>\r\n\r\n<style scoped>\r\n    .form__label {\r\n        float: left;\r\n        width: 25%;\r\n        text-align: left;\r\n        padding-bottom: 5px;\r\n        font-size: 20px;\r\n        color: black;\r\n    }\r\n    li {\r\n        margin-top: 20px;\r\n\r\n        \r\n\r\n    }\r\n    .form__control{\r\n        display: inline-block;\r\n        width: 70%;\r\n        padding-bottom: 5px;\r\n        padding-top: 5px;\r\n    }\r\n    ul {\r\n        list-style-type: none;\r\n    }\r\n    .createAccountForm{\r\n        width: 50%;\r\n        background-color: #fcdc6d;\r\n        display: inline-block;\r\n        margin: auto;\r\n    }\r\n    #submitButton {\r\n        width: 50%;\r\n        font-size: 20px;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        font-weight: bold;\r\n        color: #E6B91E;\r\n        background-color: black;\r\n    }\r\n    .accountContent{\r\n        color: black;\r\n    }\r\n    .hidden {\r\n        display: none;\r\n    }\r\n    .error {\r\n        float: left;\r\n    }\r\n    \r\n</style>"]}]}